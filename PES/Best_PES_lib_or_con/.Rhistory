PRS <- readRDS("~/Desktop/SZ_PES_mtCOJO_norm/PES/ASRB_removed_lassosum_SZ_UKBB_TRAIN/SZ_UKBB_LASSO_PRS_ASRB_removed.validate.rds")
PRS_pipeline <- readRDS("~/Desktop/SZ_PES_mtCOJO_norm/PES/ASRB_removed_lassosum_SZ_UKBB_TRAIN/SZ_UKBB_LASSO_PRS_ASRB_removed.lassosum.pipeline.rds")
PRS_weights <- cbind(PRS_pipeline$sumstats, PRS$best.beta)
SZ_sumstats <- fread("~/Desktop/SZ_PES_mtCOJO_norm/PES/QC_sumstats/SZ_PGC3_NO_ASRB_QC_sumstats.txt", header = T)
library(data.table)
library(dplyr)
SZ_sumstats <- fread("~/Desktop/SZ_PES_mtCOJO_norm/PES/QC_sumstats/SZ_PGC3_NO_ASRB_QC_sumstats.txt", header = T)
SZ_sumstats$order <-  seq.int(nrow(SZ_sumstats))
Merged_PRS <- merge(PRS_weights, SZ_sumstats, by = "order")
PRS_output <- Merged_PRS %>% select(SNP, A1.x, 'PRS$best.beta')
PRS_output <- rename(PRS_output, "A1"="A1.x", "SZ_PRS"="PRS$best.beta")
write.table(PRS_output, file="~/Desktop/SZ_PES_mtCOJO_norm/Best_DA_gene_PES/SZ_best_con_or_lib/ASRB_excluded_SNP_weights_for_validation/ASRB_SZ_SNP_weights_for_validation/SZ_PRS_penalised_reg_weights.txt",
row.names = F, quote = F)
write.table(PRS_output, file="~/Desktop/SZ_PES_mtCOJO_norm/Best_DA_gene_PES/SZ_best_con_or_lib/ASRB_excluded_SNP_weights_for_validation/SZ_PRS_penalised_reg_weights.txt",
row.names = F, quote = F)
write.table(PRS_output, file="~/Desktop/SZ_PES_mtCOJO_norm/Best_DA_gene_PES/SZ_best_con_or_lib/ASRB_excluded_SNP_weights_for_validation/ASRB_excluded_SZ_PRS_penalised_reg_weights.txt",
row.names = F, quote = F)
CACNA1C_SNPs_to_include <- fread("~/Desktop/SZ_PES_mtCOJO_norm/PES/UKBB_SZ/SZ_UKBB_SZ_PGC3_ALL_CACNA1C_network.snp", header = T)
CACNA1C_SNPs_to_include <- CACNA1C_SNPs_to_include %>% filter(P < 0.005)
CACNA1C_sum_stats <- fread("~/Desktop/SZ_PES_mtCOJO_norm/PES/Pathway_specific_variants/SZ_PGC3_ALL_CACNA1C_network.txt", header = T)
CACNA1C_sum_stats$Beta <- log(CACNA1C_sum_stats$OR)
Merged_CACNA1C <- merge(CACNA1C_sum_stats, CACNA1C_SNPs_to_include, by = "SNP")
CACNA1C_SNPs_to_include <- fread("~/Desktop/SZ_PES_mtCOJO_norm/PES/UKBB_SZ/SZ_UKBB_SZ_PGC3_ALL_CACNA1C_network.snp", header = T)
CACNA1C_SNPs_to_include <- CACNA1C_SNPs_to_include %>% filter(P < 0.005)
CACNA1C_sum_stats <- fread("~/Desktop/SZ_PES_mtCOJO_norm/PES/Pathway_specific_variants/NO_ASRB_SZ_PGC3_CACNA1C", header = T)
CACNA1C_sum_stats$Beta <- log(CACNA1C_sum_stats$OR)
Merged_CACNA1C <- merge(CACNA1C_sum_stats, CACNA1C_SNPs_to_include, by = "SNP")
CACNA1C_output <- Merged_CACNA1C %>% select(SNP, A1, Beta)
CACNA1C_output <- rename(CACNA1C_output, "CACNA1C_PES"="Beta")
write.table(CACNA1C_output, file="~/Desktop/SZ_PES_mtCOJO_norm/Best_DA_gene_PES/SZ_best_con_or_lib/ASRB_excluded_SNP_weights_for_validation/ASRB_excluded_CACNA1C_PES_SZ_cons_C_T.txt",
row.names = F, quote = F)
FADS1_SNPs_to_include <- fread("~/Desktop/SZ_PES_mtCOJO_norm/PES/UKBB_SZ/SZ_UKBB_SZ_PGC3_ALL_FADS1_network.snp", header = T)
FADS1_SNPs_to_include <- FADS1_SNPs_to_include %>% filter(P < 0.05)
FADS1_sum_stats <- fread("~/Desktop/SZ_PES_mtCOJO_norm/PES/Pathway_specific_variants/NO_ASRB_SZ_PGC3_FADS1", header = T)
FADS1_sum_stats$Beta <- log(FADS1_sum_stats$OR)
Merged_FADS1 <- merge(FADS1_sum_stats, FADS1_SNPs_to_include, by = "SNP")
FADS1_output <- Merged_FADS1 %>% select(SNP, A1, Beta)
FADS1_output <- rename(FADS1_output, "FADS1_PES"="Beta")
write.table(FADS1_output, file="~/Desktop/SZ_PES_mtCOJO_norm/Best_DA_gene_PES/SZ_best_con_or_lib/ASRB_excluded_SNP_weights_for_validation/ASRB_removed_FADS1_PES_SZ_cons_C_T.txt",
row.names = F, quote = F)
FES_SNPs_to_include <- fread("~/Desktop/SZ_PES_mtCOJO_norm/Liberal_genic_boundaries_DA_gene_PES/SZ_UKBB_liberal/SZ_UKBB_FES.snp", header = T)
FES_SNPs_to_include <- FES_SNPs_to_include %>% filter(P < 0.05)
FES_sum_stats <- fread("~/Desktop/SZ_PES_mtCOJO_norm/Liberal_genic_boundaries_DA_gene_PES/Liberal_boundaries_pathway_specific_variants/Liberal_bound_NO_ASRB_PGC3_FES", header = T)
FES_sum_stats$Beta <- log(FES_sum_stats$OR)
Merged_FES <- merge(FES_sum_stats, FES_SNPs_to_include, by = "SNP")
FES_output <- Merged_FES %>% select(SNP, A1, Beta)
FES_output <- rename(FES_output, "FES_PES"="Beta")
write.table(FES_output, file="~/Desktop/SZ_PES_mtCOJO_norm/Best_DA_gene_PES/SZ_best_con_or_lib/ASRB_excluded_SNP_weights_for_validation/ASRB_excluded_FES_PES_SZ_cons_C_T.txt",
row.names = F, quote = F)
GRIN2A <- readRDS("~/Desktop/SZ_PES_mtCOJO_norm/Liberal_genic_boundaries_DA_gene_PES/ASRB_GRIN2A_lassosum_training/ASRB_removed_SZ_UKBB_LASSO_GRIN2A.validate.rds")
GRIN2A_pipeline <- readRDS("~/Desktop/SZ_PES_mtCOJO_norm/Liberal_genic_boundaries_DA_gene_PES/ASRB_GRIN2A_lassosum_training/ASRB_removed_SZ_UKBB_LASSO_GRIN2A.lassosum.pipeline.rds")
GRIN2A_weights <- cbind(GRIN2A_pipeline$sumstats, GRIN2A$best.beta)
NZ <- GRIN2A_weights %>% filter(GRIN2A$best.beta != 0)
GRIN2A_sumstats <- fread("~/Desktop/SZ_PES_mtCOJO_norm/Liberal_genic_boundaries_DA_gene_PES/Liberal_boundaries_pathway_specific_variants/Liberal_bound_NO_ASRB_PGC3_GRIN2A", header = T)
GRIN2A_sumstats$order <-  seq.int(nrow(GRIN2A_sumstats))
Merged_GRIN2A <- merge(GRIN2A_weights, GRIN2A_sumstats, by = "order")
GRIN2A_output <- Merged_GRIN2A %>% select(SNP, A1.x, 'GRIN2A$best.beta')
GRIN2A_output <- rename(GRIN2A_output, "GRIN2A_PES"="GRIN2A$best.beta", "A1"="A1.x")
write.table(GRIN2A_output, file="~/Desktop/SZ_PES_mtCOJO_norm/Best_DA_gene_PES/SZ_best_con_or_lib/ASRB_excluded_SNP_weights_for_validation/ASRB_excluded_GRIN2A_PES_penalised_reg_weights.txt",
row.names = F, quote = F)
PRS <- readRDS("~/Desktop/SZ_PES_mtCOJO_norm/PES/ASRB_removed_lassosum_SZ_UKBB_TRAIN/SZ_UKBB_LASSO_PRS_ASRB_removed.validate.rds")
PRS_pipeline <- readRDS("~/Desktop/SZ_PES_mtCOJO_norm/PES/ASRB_removed_lassosum_SZ_UKBB_TRAIN/SZ_UKBB_LASSO_PRS_ASRB_removed.lassosum.pipeline.rds")
PRS_weights <- cbind(PRS_pipeline$sumstats, PRS$best.beta)
SZ_sumstats <- fread("~/Desktop/SZ_PES_mtCOJO_norm/PES/QC_sumstats/SZ_PGC3_NO_ASRB_QC_sumstats.txt", header = T)
SZ_sumstats$order <-  seq.int(nrow(SZ_sumstats))
Merged_PRS <- merge(PRS_weights, SZ_sumstats, by = "order")
PRS_weights <- cbind(PRS_pipeline$sumstats, PRS$best.beta)
PRS <- readRDS("~/Desktop/SZ_PES_mtCOJO_norm/PES/ASRB_removed_lassosum_SZ_UKBB_TRAIN/SZ_UKBB_LASSO_PRS_ASRB_removed.validate.rds")
PRS_pipeline <- readRDS("~/Desktop/SZ_PES_mtCOJO_norm/PES/ASRB_removed_lassosum_SZ_UKBB_TRAIN/SZ_UKBB_LASSO_PRS_ASRB_removed.lassosum.pipeline.rds")
PRS_weights <- cbind(PRS_pipeline$sumstats, PRS$best.beta)
SZ_sumstats <- fread("~/Desktop/SZ_PES_mtCOJO_norm/PES/QC_sumstats/SZ_PGC3_NO_ASRB_QC_sumstats.txt", header = T)
SZ_sumstats$order <-  seq.int(nrow(SZ_sumstats))
Merged_PRS <- merge(PRS_weights, SZ_sumstats, by = "order")
PRS_output <- Merged_PRS %>% select(CHR:BP, A1.x, 'PRS$best.beta')
head(PRS_output)
PRS_output <- Merged_PRS %>% select('CHR:BP', A1.x, 'PRS$best.beta')
head(PRS_output)
PRS_output <- rename(PRS_output, "A1"="A1.x", "SZ_PRS"="PRS$best.beta", "SNP"="CHR:BP")
head(PRS_output)
write.table(PRS_output, file="~/Desktop/SZ_PES_mtCOJO_norm/Best_DA_gene_PES/SZ_best_con_or_lib/ASRB_excluded_SNP_weights_for_validation/ASRB_excluded_SZ_PRS_penalised_reg_weights.txt",
row.names = F, quote = F)
CACNA1C_SNPs_to_include <- fread("~/Desktop/SZ_PES_mtCOJO_norm/PES/UKBB_SZ/SZ_UKBB_SZ_PGC3_ALL_CACNA1C_network.snp", header = T)
CACNA1C_SNPs_to_include <- CACNA1C_SNPs_to_include %>% filter(P < 0.005)
CACNA1C_sum_stats <- fread("~/Desktop/SZ_PES_mtCOJO_norm/PES/Pathway_specific_variants/NO_ASRB_SZ_PGC3_CACNA1C", header = T)
CACNA1C_sum_stats$Beta <- log(CACNA1C_sum_stats$OR)
Merged_CACNA1C <- merge(CACNA1C_sum_stats, CACNA1C_SNPs_to_include, by = "SNP")
CACNA1C_output <- Merged_CACNA1C %>% select('CHR:BP', A1, Beta)
CACNA1C_output <- rename(CACNA1C_output, "CACNA1C_PES"="Beta", "SNP"="CHR:BP")
head(CACNA1C_output)
write.table(CACNA1C_output, file="~/Desktop/SZ_PES_mtCOJO_norm/Best_DA_gene_PES/SZ_best_con_or_lib/ASRB_excluded_SNP_weights_for_validation/ASRB_excluded_CACNA1C_PES_SZ_cons_C_T.txt",
row.names = F, quote = F)
FADS1_SNPs_to_include <- fread("~/Desktop/SZ_PES_mtCOJO_norm/PES/UKBB_SZ/SZ_UKBB_SZ_PGC3_ALL_FADS1_network.snp", header = T)
FADS1_SNPs_to_include <- FADS1_SNPs_to_include %>% filter(P < 0.05)
FADS1_sum_stats <- fread("~/Desktop/SZ_PES_mtCOJO_norm/PES/Pathway_specific_variants/NO_ASRB_SZ_PGC3_FADS1", header = T)
FADS1_sum_stats$Beta <- log(FADS1_sum_stats$OR)
Merged_FADS1 <- merge(FADS1_sum_stats, FADS1_SNPs_to_include, by = "SNP")
FADS1_output <- Merged_FADS1 %>% select('CHR:BP', A1, Beta)
FADS1_output <- rename(FADS1_output, "FADS1_PES"="Beta", "SNP"="CHR:BP")
write.table(FADS1_output, file="~/Desktop/SZ_PES_mtCOJO_norm/Best_DA_gene_PES/SZ_best_con_or_lib/ASRB_excluded_SNP_weights_for_validation/ASRB_removed_FADS1_PES_SZ_cons_C_T.txt",
row.names = F, quote = F)
FES_SNPs_to_include <- fread("~/Desktop/SZ_PES_mtCOJO_norm/Liberal_genic_boundaries_DA_gene_PES/SZ_UKBB_liberal/SZ_UKBB_FES.snp", header = T)
FES_SNPs_to_include <- FES_SNPs_to_include %>% filter(P < 0.05)
FES_sum_stats <- fread("~/Desktop/SZ_PES_mtCOJO_norm/Liberal_genic_boundaries_DA_gene_PES/Liberal_boundaries_pathway_specific_variants/Liberal_bound_NO_ASRB_PGC3_FES", header = T)
FES_sum_stats$Beta <- log(FES_sum_stats$OR)
Merged_FES <- merge(FES_sum_stats, FES_SNPs_to_include, by = "SNP")
FES_output <- Merged_FES %>% select("CHR:BP", A1, Beta)
FES_output <- rename(FES_output, "FES_PES"="Beta", "SNP"="CHR:BP")
write.table(FES_output, file="~/Desktop/SZ_PES_mtCOJO_norm/Best_DA_gene_PES/SZ_best_con_or_lib/ASRB_excluded_SNP_weights_for_validation/ASRB_excluded_FES_PES_SZ_cons_C_T.txt",
row.names = F, quote = F)
GRIN2A <- readRDS("~/Desktop/SZ_PES_mtCOJO_norm/Liberal_genic_boundaries_DA_gene_PES/ASRB_GRIN2A_lassosum_training/ASRB_removed_SZ_UKBB_LASSO_GRIN2A.validate.rds")
GRIN2A_pipeline <- readRDS("~/Desktop/SZ_PES_mtCOJO_norm/Liberal_genic_boundaries_DA_gene_PES/ASRB_GRIN2A_lassosum_training/ASRB_removed_SZ_UKBB_LASSO_GRIN2A.lassosum.pipeline.rds")
GRIN2A_weights <- cbind(GRIN2A_pipeline$sumstats, GRIN2A$best.beta)
NZ <- GRIN2A_weights %>% filter(GRIN2A$best.beta != 0)
GRIN2A_sumstats <- fread("~/Desktop/SZ_PES_mtCOJO_norm/Liberal_genic_boundaries_DA_gene_PES/Liberal_boundaries_pathway_specific_variants/Liberal_bound_NO_ASRB_PGC3_GRIN2A", header = T)
GRIN2A_sumstats$order <-  seq.int(nrow(GRIN2A_sumstats))
Merged_GRIN2A <- merge(GRIN2A_weights, GRIN2A_sumstats, by = "order")
GRIN2A_output <- Merged_GRIN2A %>% select('CHR:BP', A1.x, 'GRIN2A$best.beta')
GRIN2A_output <- rename(GRIN2A_output, "GRIN2A_PES"="GRIN2A$best.beta", "A1"="A1.x", "SNP"="CHR:BP")
write.table(GRIN2A_output, file="~/Desktop/SZ_PES_mtCOJO_norm/Best_DA_gene_PES/SZ_best_con_or_lib/ASRB_excluded_SNP_weights_for_validation/ASRB_excluded_GRIN2A_PES_penalised_reg_weights.txt",
row.names = F, quote = F)
PCCB <- readRDS("~/Desktop/SZ_PES_mtCOJO_norm/PES/Lassosum_SZ_UKBB/SZ_UKBB_LASSO_SZ_PGC3_ALL_PCCB_network.validate.rds")
PCCB_pipeline <- readRDS("~/Desktop/SZ_PES_mtCOJO_norm/PES/Lassosum_SZ_UKBB/SZ_UKBB_LASSO_SZ_PGC3_ALL_PCCB_network.lassosum.pipeline.rds")
PCCB_weights <- cbind(PCCB_pipeline$sumstats, PCCB$best.beta)
PCCB_sumstats <- fread("~/Desktop/SZ_PES_mtCOJO_norm/PES/Pathway_specific_variants/NO_ASRB_SZ_PGC3_PCCB", header = T)
PCCB_sumstats$order <-  seq.int(nrow(PCCB_sumstats))
Merged_PCCB <- merge(PCCB_weights, PCCB_sumstats, by = "order")
PCCB_output <- Merged_PCCB %>% select('CHR:BP', A1.x, 'PCCB$best.beta')
PCCB_output <- rename(PCCB_output, "SNP"="CHR:BP", "PCCB_PES"="PCCB$best.beta", "A1"="A1.x")
write.table(PCCB_output, file="~/Desktop/SZ_PES_mtCOJO_norm/Best_DA_gene_PES/SZ_best_con_or_lib/ASRB_excluded_SNP_weights_for_validation/ASRB_excluded_PCCB_PES_penalised_reg_weights.txt",
row.names = F, quote = F)
RPS17 <- readRDS("~/Desktop/SZ_PES_mtCOJO_norm/PES/Lassosum_SZ_UKBB/SZ_UKBB_LASSO_SZ_PGC3_ALL_RPS17_network.validate.rds")
RPS17_pipeline <- readRDS("~/Desktop/SZ_PES_mtCOJO_norm/PES/Lassosum_SZ_UKBB/SZ_UKBB_LASSO_SZ_PGC3_ALL_RPS17_network.lassosum.pipeline.rds")
RPS17_weights <- cbind(RPS17_pipeline$sumstats, RPS17$best.beta)
RPS17_sumstats <- fread("~/Desktop/SZ_PES_mtCOJO_norm/PES/Pathway_specific_variants/NO_ASRB_SZ_PGC3_RPS17", header = T)
RPS17_sumstats$order <-  seq.int(nrow(RPS17_sumstats))
Merged_RPS17 <- merge(RPS17_weights, RPS17_sumstats, by = "order")
RPS17_output <- Merged_RPS17 %>% select('CHR:BP', A1.x, 'RPS17$best.beta')
RPS17_output <- rename(RPS17_output, "RPS17_PES"="RPS17$best.beta", "A1"="A1.x", "SNP"="CHR:BP")
write.table(RPS17_output, file="~/Desktop/SZ_PES_mtCOJO_norm/Best_DA_gene_PES/SZ_best_con_or_lib/ASRB_excluded_SNP_weights_for_validation/ASRB_excluded_RPS17_PES_penalised_reg_weights.txt",
row.names = F, quote = F)
############################
library(dplyr)
library(data.table)
library(ggplot2)
library(caret)
bd <- fread("~/Desktop/23andMe_pneumonia/FINAL_IVW_meta_analysis/UKBB_pneumonia/Pneumonia_phenotypes/Pneumonia_phenotypes.tab", header = T)
bd <- fread("~/Desktop/23andMe_pneumonia/FINAL_IVW_meta_analysis/UKBB_pneumonia/Pneumonia_phenotypes/Pneumonia_phenotypes.tab", header = T)
GWAS_ind <- fread("~/Desktop/23andMe_pneumonia/FINAL_IVW_meta_analysis/UKBB_pneumonia/PRS/Covariates_pneumonia_UKBB_white_British.tab.txt", header = T)
GWAS_ind <- rename(GWAS_ind, "f.eid"="IID")
Merged_genotype_avail <- merge(bd, GWAS_ind, by="f.eid")
Self_report_cols <- as.list(paste("f.20002.",0:3, ".", 1:33,sep=""))
select_eid <- Merged_genotype_avail %>%
select(starts_with("f.eid"))
select_20002 <-  Merged_genotype_avail %>%
select(starts_with("f.20002."))
Self_reported_df <- bind_cols(select_eid, select_20002)
Self_report_func <- function(df, code, name) {
Self_reported <- which(df==code, arr.ind=T)
Self_reported_row <- Self_reported[,1]
df$phenotype <- 0
df[Self_reported_row, ]$phenotype <- 1
df$phenotype <- as.factor(df$phenotype)
df <- df %>% select(f.eid, phenotype)
names(df)[names(df) == "phenotype"] <- name
return(df)
}
SZ_baseline_self_report <- Self_report_func(Self_reported_df, "1289", "Self_report_baseline_SZ")
BIP_baseline_self_report <- Self_report_func(Self_reported_df, "1291", "Self_report_baseline_BIP")
Merged_baseline <- merge(SZ_baseline_self_report, BIP_baseline_self_report, by="f.eid")
select_ICD10_primary <- Merged_genotype_avail %>% select(starts_with("f.41202"))
select_ICD10_secondary <- Merged_genotype_avail %>% select(starts_with("f.41204"))
ICD_df <- cbind(select_eid, select_ICD10_primary, select_ICD10_secondary)
SZ_codes <- as.list(c("F200", "F201", "F202", "F203", "F204",
"F205", "F206", "F208", "F209"))
SZ_ICD_10_select <- which(ICD_df=="F200" | ICD_df=="F201" | ICD_df == "F202" |
ICD_df == "F203" | ICD_df == "F204" | ICD_df == "F205" |
ICD_df == "F206" | ICD_df == "F208" | ICD_df == "F209", arr.ind = T)
SZ_ICD_10_select_row <- SZ_ICD_10_select[,1]
SZ_ICD_10_select_row <- unique(SZ_ICD_10_select_row)
ICD_df$SZ_ICD10 <- 0
ICD_df[SZ_ICD_10_select_row, ]$SZ_ICD10 <- 1
ICD_df$SZ_ICD10 <- as.factor(ICD_df$SZ_ICD10)
BIP_codes <- as.list(c("F310", "F311", "F312", "F313", "F314",
"F315", "F316", "F317", "F318", "F319") )
BIP_ICD10_select <- which(ICD_df == "F310" | ICD_df == "F311" | ICD_df == "F312" |
ICD_df == "F313" | ICD_df == "F314" | ICD_df == "F315" |
ICD_df == "F316" | ICD_df == "F317" | ICD_df == "F318" |
ICD_df == "F319", arr.ind = T)
BIP_ICD10_select_row <- BIP_ICD10_select[,1]
BIP_ICD10_select_row <- unique(BIP_ICD10_select_row)
ICD_df$BIP_ICD10 <- 0
ICD_df[BIP_ICD10_select_row, ]$BIP_ICD10 <- 1
ICD_df$BIP_ICD10 <- as.factor(ICD_df$BIP_ICD10)
ICD_df <- ICD_df %>% select(f.eid, SZ_ICD10, BIP_ICD10)
MHQ_raw <- fread("~/Desktop/SZ_PES_mtCOJO_norm/UKBB_phenotypes/MHQ_ever_diagnosed_UKBB.txt", header = T)
MHQ_completed <- MHQ_raw %>% filter(!is.na(f.20400.0.0))
GWAS_ID <- GWAS_ind %>% select(f.eid)
MHQ_completed <- merge(MHQ_completed, GWAS_ID, by = "f.eid")
SZ_MHQ_select <- which(MHQ_completed == 2, arr.ind = T)
SZ_MHQ_select_rows <- SZ_MHQ_select[,1]
MHQ_completed$SZ_MHQ_self_report <- 0
MHQ_completed[SZ_MHQ_select_rows, ]$SZ_MHQ_self_report <- 1
MHQ_completed$SZ_MHQ_self_report <- as.factor(MHQ_completed$SZ_MHQ_self_report)
BIP_MHQ_select <- which(MHQ_completed == 10, arr.ind = T)
BIP_MHQ_select_rows <- BIP_MHQ_select[,1]
MHQ_completed$BIP_MHQ_self_report <- 0
MHQ_completed[BIP_MHQ_select_rows, ]$BIP_MHQ_self_report <- 1
MHQ_completed$BIP_MHQ_self_report <- as.factor(MHQ_completed$BIP_MHQ_self_report)
Select_MHQ_cases_SZ <- MHQ_completed %>% select(f.eid, SZ_MHQ_self_report, BIP_MHQ_self_report) %>%
filter(SZ_MHQ_self_report == "1")
Select_ICD_cases_SZ <- ICD_df %>% filter(SZ_ICD10 == "1")
Select_baseline_report_cases_SZ <- Merged_baseline %>% filter(Self_report_baseline_SZ == "1")
Select_MHQ_cases_BIP <- MHQ_completed %>% select(f.eid, SZ_MHQ_self_report, BIP_MHQ_self_report) %>%
filter(BIP_MHQ_self_report == "1")
Select_ICD_cases_BIP <- ICD_df %>% filter(BIP_ICD10 == "1")
Select_baseline_report_cases_BIP <- Merged_baseline %>% filter(Self_report_baseline_BIP == "1")
TE_merge <- merge(Select_ICD_cases_BIP, Select_baseline_report_cases_BIP, by = "f.eid")
Select_MHQ_cases_SZ <- rename(Select_MHQ_cases_SZ, "SZ"="SZ_MHQ_self_report")
Select_MHQ_cases_SZ <- Select_MHQ_cases_SZ %>% select(f.eid, SZ)
Select_baseline_report_cases_SZ <- rename(Select_baseline_report_cases_SZ, "SZ"="Self_report_baseline_SZ")
Select_baseline_report_cases_SZ <- Select_baseline_report_cases_SZ %>% select(f.eid, SZ)
Select_ICD_cases_SZ <- rename(Select_ICD_cases_SZ, "SZ"="SZ_ICD10")
Select_ICD_cases_SZ <- Select_ICD_cases_SZ %>% select(f.eid, SZ)
All_SZ_cases_EUR_unrel_geno_UKBB <- rbind(Select_MHQ_cases_SZ,
Select_baseline_report_cases_SZ,
Select_ICD_cases_SZ)
All_SZ_cases_EUR_unrel_geno_UKBB <- unique(All_SZ_cases_EUR_unrel_geno_UKBB)
Select_MHQ_cases_BIP <- rename(Select_MHQ_cases_BIP, "BIP"="BIP_MHQ_self_report")
Select_MHQ_cases_BIP <- Select_MHQ_cases_BIP %>% select(f.eid, BIP)
Select_baseline_report_cases_BIP <- rename(Select_baseline_report_cases_BIP, "BIP"="Self_report_baseline_BIP")
Select_baseline_report_cases_BIP <- Select_baseline_report_cases_BIP %>% select(f.eid, BIP)
Select_ICD_cases_BIP <- rename(Select_ICD_cases_BIP, "BIP"="BIP_ICD10")
Select_ICD_cases_BIP <- Select_ICD_cases_BIP %>% select(f.eid, BIP)
All_BIP_cases_EUR_unrel_geno_UKBB <- rbind(Select_MHQ_cases_BIP,
Select_baseline_report_cases_BIP,
Select_ICD_cases_BIP)
All_BIP_cases_EUR_unrel_geno_UKBB <- unique(All_BIP_cases_EUR_unrel_geno_UKBB)
Overlap <- merge(All_BIP_cases_EUR_unrel_geno_UKBB, All_SZ_cases_EUR_unrel_geno_UKBB, by = "f.eid")
trainIndex <- createDataPartition(All_BIP_cases_EUR_unrel_geno_UKBB$f.eid,p=0.7,list=FALSE)
train_BIP <- All_BIP_cases_EUR_unrel_geno_UKBB[trainIndex, ]
test_BIP <- All_BIP_cases_EUR_unrel_geno_UKBB[-trainIndex, ]
Merge_train_test <- merge(train_BIP, test_BIP, by = "f.eid")
No_MH_select <- which(!is.na(MHQ_completed[, 3:17]), arr.ind = T)
No_MH_select_rows <- No_MH_select[,1]
No_MH_select_rows <- unique(No_MH_select_rows)
MHQ_completed$No_mental_health <- 0
MHQ_completed[No_MH_select_rows, ]$No_mental_health <- 1
MHQ_completed$No_mental_health <- as.factor(MHQ_completed$No_mental_health)
No_report_MH <- MHQ_completed %>% select(f.eid, No_mental_health) %>% filter(No_mental_health == 0)
Merged_SZ_no_MH <- merge(No_report_MH, All_SZ_cases_EUR_unrel_geno_UKBB,
by = "f.eid")
Merged_BIP_no_MH <- merge(No_report_MH, All_BIP_cases_EUR_unrel_geno_UKBB,
by = "f.eid")
No_report_MH_cases_removed <- No_report_MH %>% filter(f.eid != 2839592 &
f.eid != 3139224 &
f.eid != 4964352)
No_report_MH_cases_removed$SZ <- 0
No_report_MH_cases_removed$BIP <- 0
SZ_controls <- No_report_MH_cases_removed[1:1262, ]
BIP_training_controls <- No_report_MH_cases_removed[25000:27317, ]
1161*2
1657*2
0.7*3314
0.3*3314
496*2
BIP_test_controls <- No_report_MH_cases_removed[40000:40995, ]
BIP_test_controls <- No_report_MH_cases_removed[40000:40994, ]
BIP_test_controls <- No_report_MH_cases_removed[40000:40996, ]
BIP_test_controls <- No_report_MH_cases_removed[40000:40995, ]
############################
library(dplyr)
library(data.table)
library(ggplot2)
library(caret)
bd <- fread("~/Desktop/23andMe_pneumonia/FINAL_IVW_meta_analysis/UKBB_pneumonia/Pneumonia_phenotypes/Pneumonia_phenotypes.tab", header = T)
GWAS_ind <- fread("~/Desktop/23andMe_pneumonia/FINAL_IVW_meta_analysis/UKBB_pneumonia/PRS/Covariates_pneumonia_UKBB_white_British.tab.txt", header = T)
GWAS_ind <- rename(GWAS_ind, "f.eid"="IID")
Merged_genotype_avail <- merge(bd, GWAS_ind, by="f.eid")
Self_report_cols <- as.list(paste("f.20002.",0:3, ".", 1:33,sep=""))
select_eid <- Merged_genotype_avail %>%
select(starts_with("f.eid"))
select_20002 <-  Merged_genotype_avail %>%
select(starts_with("f.20002."))
Self_reported_df <- bind_cols(select_eid, select_20002)
Self_report_func <- function(df, code, name) {
Self_reported <- which(df==code, arr.ind=T)
Self_reported_row <- Self_reported[,1]
df$phenotype <- 0
df[Self_reported_row, ]$phenotype <- 1
df$phenotype <- as.factor(df$phenotype)
df <- df %>% select(f.eid, phenotype)
names(df)[names(df) == "phenotype"] <- name
return(df)
}
SZ_baseline_self_report <- Self_report_func(Self_reported_df, "1289", "Self_report_baseline_SZ")
BIP_baseline_self_report <- Self_report_func(Self_reported_df, "1291", "Self_report_baseline_BIP")
Merged_baseline <- merge(SZ_baseline_self_report, BIP_baseline_self_report, by="f.eid")
select_ICD10_primary <- Merged_genotype_avail %>% select(starts_with("f.41202"))
select_ICD10_secondary <- Merged_genotype_avail %>% select(starts_with("f.41204"))
ICD_df <- cbind(select_eid, select_ICD10_primary, select_ICD10_secondary)
SZ_codes <- as.list(c("F200", "F201", "F202", "F203", "F204",
"F205", "F206", "F208", "F209"))
SZ_ICD_10_select <- which(ICD_df=="F200" | ICD_df=="F201" | ICD_df == "F202" |
ICD_df == "F203" | ICD_df == "F204" | ICD_df == "F205" |
ICD_df == "F206" | ICD_df == "F208" | ICD_df == "F209", arr.ind = T)
SZ_ICD_10_select_row <- SZ_ICD_10_select[,1]
SZ_ICD_10_select_row <- unique(SZ_ICD_10_select_row)
ICD_df$SZ_ICD10 <- 0
ICD_df[SZ_ICD_10_select_row, ]$SZ_ICD10 <- 1
ICD_df$SZ_ICD10 <- as.factor(ICD_df$SZ_ICD10)
BIP_codes <- as.list(c("F310", "F311", "F312", "F313", "F314",
"F315", "F316", "F317", "F318", "F319") )
BIP_ICD10_select <- which(ICD_df == "F310" | ICD_df == "F311" | ICD_df == "F312" |
ICD_df == "F313" | ICD_df == "F314" | ICD_df == "F315" |
ICD_df == "F316" | ICD_df == "F317" | ICD_df == "F318" |
ICD_df == "F319", arr.ind = T)
BIP_ICD10_select_row <- BIP_ICD10_select[,1]
BIP_ICD10_select_row <- unique(BIP_ICD10_select_row)
ICD_df$BIP_ICD10 <- 0
ICD_df[BIP_ICD10_select_row, ]$BIP_ICD10 <- 1
ICD_df$BIP_ICD10 <- as.factor(ICD_df$BIP_ICD10)
ICD_df <- ICD_df %>% select(f.eid, SZ_ICD10, BIP_ICD10)
MHQ_raw <- fread("~/Desktop/SZ_PES_mtCOJO_norm/UKBB_phenotypes/MHQ_ever_diagnosed_UKBB.txt", header = T)
MHQ_completed <- MHQ_raw %>% filter(!is.na(f.20400.0.0))
GWAS_ID <- GWAS_ind %>% select(f.eid)
MHQ_completed <- merge(MHQ_completed, GWAS_ID, by = "f.eid")
SZ_MHQ_select <- which(MHQ_completed == 2, arr.ind = T)
SZ_MHQ_select_rows <- SZ_MHQ_select[,1]
MHQ_completed$SZ_MHQ_self_report <- 0
MHQ_completed[SZ_MHQ_select_rows, ]$SZ_MHQ_self_report <- 1
MHQ_completed$SZ_MHQ_self_report <- as.factor(MHQ_completed$SZ_MHQ_self_report)
BIP_MHQ_select <- which(MHQ_completed == 10, arr.ind = T)
BIP_MHQ_select_rows <- BIP_MHQ_select[,1]
MHQ_completed$BIP_MHQ_self_report <- 0
MHQ_completed[BIP_MHQ_select_rows, ]$BIP_MHQ_self_report <- 1
MHQ_completed$BIP_MHQ_self_report <- as.factor(MHQ_completed$BIP_MHQ_self_report)
Select_MHQ_cases_SZ <- MHQ_completed %>% select(f.eid, SZ_MHQ_self_report, BIP_MHQ_self_report) %>%
filter(SZ_MHQ_self_report == "1")
Select_ICD_cases_SZ <- ICD_df %>% filter(SZ_ICD10 == "1")
Select_baseline_report_cases_SZ <- Merged_baseline %>% filter(Self_report_baseline_SZ == "1")
Select_MHQ_cases_BIP <- MHQ_completed %>% select(f.eid, SZ_MHQ_self_report, BIP_MHQ_self_report) %>%
filter(BIP_MHQ_self_report == "1")
Select_ICD_cases_BIP <- ICD_df %>% filter(BIP_ICD10 == "1")
Select_baseline_report_cases_BIP <- Merged_baseline %>% filter(Self_report_baseline_BIP == "1")
TE_merge <- merge(Select_ICD_cases_BIP, Select_baseline_report_cases_BIP, by = "f.eid")
Select_MHQ_cases_SZ <- rename(Select_MHQ_cases_SZ, "SZ"="SZ_MHQ_self_report")
Select_MHQ_cases_SZ <- Select_MHQ_cases_SZ %>% select(f.eid, SZ)
Select_baseline_report_cases_SZ <- rename(Select_baseline_report_cases_SZ, "SZ"="Self_report_baseline_SZ")
Select_baseline_report_cases_SZ <- Select_baseline_report_cases_SZ %>% select(f.eid, SZ)
Select_ICD_cases_SZ <- rename(Select_ICD_cases_SZ, "SZ"="SZ_ICD10")
Select_ICD_cases_SZ <- Select_ICD_cases_SZ %>% select(f.eid, SZ)
All_SZ_cases_EUR_unrel_geno_UKBB <- rbind(Select_MHQ_cases_SZ,
Select_baseline_report_cases_SZ,
Select_ICD_cases_SZ)
All_SZ_cases_EUR_unrel_geno_UKBB <- unique(All_SZ_cases_EUR_unrel_geno_UKBB)
Select_MHQ_cases_BIP <- rename(Select_MHQ_cases_BIP, "BIP"="BIP_MHQ_self_report")
Select_MHQ_cases_BIP <- Select_MHQ_cases_BIP %>% select(f.eid, BIP)
Select_baseline_report_cases_BIP <- rename(Select_baseline_report_cases_BIP, "BIP"="Self_report_baseline_BIP")
Select_baseline_report_cases_BIP <- Select_baseline_report_cases_BIP %>% select(f.eid, BIP)
Select_ICD_cases_BIP <- rename(Select_ICD_cases_BIP, "BIP"="BIP_ICD10")
Select_ICD_cases_BIP <- Select_ICD_cases_BIP %>% select(f.eid, BIP)
All_BIP_cases_EUR_unrel_geno_UKBB <- rbind(Select_MHQ_cases_BIP,
Select_baseline_report_cases_BIP,
Select_ICD_cases_BIP)
All_BIP_cases_EUR_unrel_geno_UKBB <- unique(All_BIP_cases_EUR_unrel_geno_UKBB)
Overlap <- merge(All_BIP_cases_EUR_unrel_geno_UKBB, All_SZ_cases_EUR_unrel_geno_UKBB, by = "f.eid")
trainIndex <- createDataPartition(All_BIP_cases_EUR_unrel_geno_UKBB$f.eid,p=0.7,list=FALSE)
train_BIP <- All_BIP_cases_EUR_unrel_geno_UKBB[trainIndex, ]
test_BIP <- All_BIP_cases_EUR_unrel_geno_UKBB[-trainIndex, ]
Merge_train_test <- merge(train_BIP, test_BIP, by = "f.eid")
write.table(train_BIP, file="~/Desktop/SZ_PES_mtCOJO_norm/UKBB_phenotypes/BIP_phenotypes/TRAINING_BIP_unrelated_EUR_genotype_avail_UKBB.txt",
sep = "\t", row.names = F, quote = F)
write.table(test_BIP, file="~/Desktop/SZ_PES_mtCOJO_norm/UKBB_phenotypes/BIP_phenotypes/TEST_BIP_unrelated_EUR_genotype_avail_UKBB.txt",
sep = "\t", row.names = F, quote = F)
No_MH_select <- which(!is.na(MHQ_completed[, 3:17]), arr.ind = T)
No_MH_select_rows <- No_MH_select[,1]
No_MH_select_rows <- unique(No_MH_select_rows)
MHQ_completed$No_mental_health <- 0
MHQ_completed[No_MH_select_rows, ]$No_mental_health <- 1
MHQ_completed$No_mental_health <- as.factor(MHQ_completed$No_mental_health)
No_report_MH <- MHQ_completed %>% select(f.eid, No_mental_health) %>% filter(No_mental_health == 0)
Merged_SZ_no_MH <- merge(No_report_MH, All_SZ_cases_EUR_unrel_geno_UKBB,
by = "f.eid")
Merged_BIP_no_MH <- merge(No_report_MH, All_BIP_cases_EUR_unrel_geno_UKBB,
by = "f.eid")
No_report_MH_cases_removed <- No_report_MH %>% filter(f.eid != 2839592 &
f.eid != 3139224 &
f.eid != 4964352)
No_report_MH_cases_removed$SZ <- 0
No_report_MH_cases_removed$BIP <- 0
SZ_controls <- No_report_MH_cases_removed[1:1262, ]
SZ_controls <- SZ_controls %>% select(f.eid, SZ)
BIP_training_controls <- No_report_MH_cases_removed[25000:27321, ]
head(BIP_training_controls)
BIP_training_controls <- BIP_training_controls %>% select(f.eid, BIP)
BIP_test_controls <- No_report_MH_cases_removed[40000:40993, ]
BIP_test_controls <- No_report_MH_cases_removed[40000:40991, ]
BIP_test_controls <- BIP_test_controls %>% select(f.eid, BIP)
SZ_UKBB_full <- rbind(All_SZ_cases_EUR_unrel_geno_UKBB, SZ_controls)
SZ_UKBB_full <- merge(SZ_UKBB_full, GWAS_ind, by = "f.eid")
BIP_UKBB_training <- rbind(train_BIP, BIP_training_controls)
BIP_training_UKBB_full <- merge(BIP_UKBB_training, GWAS_ind, by = "f.eid")
write.table(BIP_training_UKBB_full, file="~/Desktop/SZ_PES_mtCOJO_norm/UKBB_phenotypes/BIP_phenotypes/BIP_TRAINING_double_N_random_control_UKBB.txt",
sep = "\t", row.names = F, quote = F)
BIP_UKBB_test <- rbind(test_BIP, BIP_test_controls)
BIP_test_UKBB_full <- merge(BIP_UKBB_test, GWAS_ind, by = "f.eid")
write.table(BIP_test_UKBB_full, file="~/Desktop/SZ_PES_mtCOJO_norm/UKBB_phenotypes/BIP_phenotypes/BIP_TEST_double_N_random_control_UKBB.txt",
sep = "\t", row.names = F, quote = F)
head(BIP_training_UKBB_full)
SZ_demo <- glm(SZ ~ Sex + Age, family="binomial", data = SZ_UKBB_full)
summary(SZ_demo)
table(SZ_UKBB_full$Sex, SZ_UKBB_full$SZ)
399+232
399/631
654/(654+608)
BIP_train_demo <- glm(BIP ~ Sex + Age, family="binomial", data = BIP_training_UKBB_full)
summary(BIP_train_demo)
summary(BIP_training_UKBB_full$Sex, BIP_training_UKBB_full$BIP)
table(BIP_training_UKBB_full$Sex, BIP_training_UKBB_full$BIP)
649/(649+512)
1208/(1208+1114)
BIP_test_demo <- glm(BIP ~ Sex + Age, family="binomial", data = BIP_test_UKBB_full)
summary(BIP_test_demo)
table(BIP_test_UKBB_full$Sex, BIP_test_UKBB_full$BIP)
290/(290+206)
512/(480+512)
